{"version":3,"sources":["components/notes.tsx","components/control.tsx","components/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CSSCenterFlex","flexDirection","display","alignItems","justifyContent","generateNote","array","Math","floor","random","length","generateKey","toString","substr","PlayerBox","children","style","width","height","backgroundColor","fontSize","round","Note","note","audioPath","join","process","audioPathExtra","result","includes","optionGenerator","sound1","Howl","src","sound2","useEffect","play","on","className","fontFamily","color","Playing","bpm","useState","setNote","key","setKey","interval","bpmToInterval","refreshNote","timerId","setInterval","clearInterval","Paused","Player","playing","ControlPanel","setBpm","setPlaying","label","marginTop","margin","marginRight","onChange","value","parseInt","Number","isNaN","size","defaultValue","onClick","marginLeft","Page","Content","Header","fontStyle","marginBottom","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3978da5b.chunk.js","sourcesContent":["import { join } from \"path\";\nimport { CSSProperties, useEffect, useState } from \"react\";\nimport { Howl } from \"howler\";\n\nexport function CSSCenterFlex(\n  flexDirection: \"column\" | \"row\" = \"column\"\n): CSSProperties {\n  return {\n    display: \"flex\",\n    flexDirection,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  };\n}\n\nfunction sample<T>(array: T[]): T {\n  const index = Math.floor(Math.random() * array.length);\n\n  return array[index];\n}\n\nfunction generateNote(): string {\n  const notes = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\n\n  return sample(notes);\n}\n\nfunction generateKey(): string {\n  return Math.random().toString(36).substr(2, 5);\n}\n\nfunction bpmToInterval(bpm: number): number {\n  return Math.floor((60 * 1000) / bpm);\n}\n\nconst ANIMATTION_ENTER = `animate__animated animate__fadeIn`;\n\nconst PlayerBox: React.FC = ({ children }) => {\n  return (\n    <div\n      style={{\n        width: \"40vw\",\n        height: \"40vh\",\n        backgroundColor: \"skyblue\",\n        ...CSSCenterFlex(),\n        fontSize: \"120px\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};\nconst random = () => {\n  const result = Math.round(Math.random()) === 0;\n  return result;\n};\nconst optionGenerator = (note: string) => {\n  let result = random() ? \"flat\" : \"sharp\";\n  if ([\"C\", \"F\"].includes(note)) {\n    result = `sharp`;\n  }\n  if ([\"B\", \"E\"].includes(note)) {\n    result = `flat`;\n  }\n  return join(process.env.PUBLIC_URL, `assets/${result}.mp3`);\n};\nconst Note: React.FC<{ note: string }> = ({ note }) => {\n  const audioPath = join(process.env.PUBLIC_URL, `assets/${note}.mp3`);\n  const audioPathExtra = optionGenerator(note);\n\n  var sound1 = new Howl({\n    src: [audioPath],\n  });\n  var sound2 = new Howl({\n    src: [audioPathExtra],\n  });\n\n  useEffect(() => {\n    sound1.play();\n    sound1.on(\"end\", function () {\n      {\n        random() && sound2.play();\n      }\n    });\n  }, []);\n  return (\n    <PlayerBox>\n      <span\n        className={ANIMATTION_ENTER}\n        style={{\n          fontSize: \"120px\",\n          fontFamily: \"Georgia\",\n          color: \"#2860B4\",\n        }}\n      >\n        {note}\n      </span>\n    </PlayerBox>\n  );\n};\n\nconst Playing: React.FC<{ bpm: number }> = ({ bpm }) => {\n  const [note, setNote] = useState<string>(generateNote());\n  const [key, setKey] = useState<string>(generateKey());\n  const interval = bpmToInterval(bpm);\n\n  function refreshNote() {\n    setNote(generateNote());\n    setKey(generateKey());\n  }\n\n  useEffect(() => {\n    const timerId = setInterval(refreshNote, interval);\n    return function cleanup() {\n      clearInterval(timerId);\n    };\n  });\n\n  return <Note key={key} note={note} />;\n};\n\nconst Paused: React.FC = () => {\n  const msg = `PAUSED`;\n\n  return (\n    <PlayerBox>\n      <span\n        style={{\n          fontFamily: \"Lucida Console\",\n          color: \"#F2569C\",\n        }}\n      >\n        {msg}\n      </span>\n    </PlayerBox>\n  );\n};\n\nexport const Player: React.FC<{ bpm: number; playing: Boolean }> = ({\n  bpm,\n  playing,\n}) => {\n  if (playing) {\n    return <Playing bpm={bpm} />;\n  }\n  return <Paused />;\n};\n","import { Button, InputNumber } from \"antd\";\nimport { CSSCenterFlex } from \"./notes\";\n\ninterface ControlPanelProps {\n  setBpm: (bpm: number) => void;\n  playing: Boolean;\n  setPlaying: (playing: Boolean) => void;\n}\n\nconst DEFAULT_BPM = 60;\n\nexport const ControlPanel: React.FC<ControlPanelProps> = ({\n  setBpm,\n  playing,\n  setPlaying,\n}) => {\n  const onChange = (value: string) => {\n    const bpm = parseInt(value);\n    if (Number.isNaN(bpm)) {\n      setBpm(DEFAULT_BPM);\n    } else {\n      setBpm(bpm);\n    }\n  };\n\n  const onClick = () => {\n    setPlaying(!playing);\n  };\n\n  const label = playing ? `STOP` : `START`;\n\n  return (\n    <div\n      style={{\n        ...CSSCenterFlex(\"row\"),\n        marginTop: \"16px\",\n      }}\n    >\n      <span style={{ margin: \"8px\" }}>\n        <span style={{ marginRight: \"8px\", fontSize: \"18px\" }}>{`bpm`}</span>\n        <InputNumber onChange={onChange} size=\"large\" defaultValue=\"60\" />\n      </span>\n      <Button\n        onClick={onClick}\n        size=\"large\"\n        style={{\n          marginLeft: \"12px\",\n          width: \"90px\",\n        }}\n      >\n        {label}\n      </Button>\n    </div>\n  );\n};\n","import { useState } from \"react\"\nimport { ControlPanel } from \"./control\"\nimport { Player } from \"./notes\"\n\nexport const Page: React.FC = () => {\n    const [bpm, setBpm] = useState<number>(40)\n    const [playing, setPlaying] = useState<Boolean>(false)\n\n    return (\n        <div style={{\n\n        }}>\n            <Player bpm={bpm} playing={playing} />\n            <ControlPanel setBpm={setBpm} playing={playing} setPlaying={setPlaying} />\n        </div>\n    )\n}","import './App.css'\n\nimport \"animate.css\"\nimport 'antd/dist/antd.css'\nimport { CSSCenterFlex } from './components/notes'\nimport { Page } from './components'\n\n\nexport const Content: React.FC = ({ children }) => {\n  return (\n    <div style={{\n      width: '100vw',\n      height: '100vh',\n      ...CSSCenterFlex(),\n    }}>\n      {children}\n    </div>\n  )\n}\n\nconst Header: React.FC = () => {\n  return (\n    <div style={{\n      fontFamily: 'Centaur',\n      fontStyle: 'oblique',\n      fontSize: '48px',\n      color: '#397BBE',\n      marginBottom: '12px',\n    }}>\n      <span>la nota</span>\n    </div>\n  )\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Content>\n        <Header />\n        <Page />\n      </Content>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}